# Generated by Django 4.2.4 on 2023-08-12 20:10

from django.db import migrations
from store.models import StoreStatus
from datetime import datetime, timedelta
import csv
from pytz import UTC
from django.utils import timezone
import pytz


def create_store_status_log(apps, schema_editor):
    Store = apps.get_model('store', 'Store')
    StoreStatusLog = apps.get_model('store', 'StoreStatusLog')
    with open('store/csv_data/store_status.csv') as csvfile:
        reader = csv.DictReader(csvfile)
        for row in reader:
            print(row)
            store = Store.objects.filter(store_id=row['store_id']).first()
            status = StoreStatus.ACTIVE if row['status'] == 'active' else StoreStatus.INACTIVE
            timestamp_str = row['timestamp_utc']
            
            # [:len(row['timestamp_utc'])-4]
            try:
                if store:
                    timestamp = datetime.strptime(timestamp_str, '%Y-%m-%d %H:%M:%S.%f %Z')
                    utc_timezone = pytz.timezone('UTC')
                    timestamp_utc = utc_timezone.localize(timestamp)
                    print(timestamp_utc)
                    status_log = StoreStatusLog.objects.create(
                        store=store,
                        status=status,
                        timestamp=timestamp_utc
                )
                    print(status_log)
                else:
                     print(f"No matching store for store_id: {row['store_id']}")
            except Exception as e:
                print(f"Error processing row: {row}, Error: {e}")


class Migration(migrations.Migration):

    dependencies = [
        ('store', '0002_timing_and_store'),
    ]

    operations = [
        migrations.RunPython(create_store_status_log, reverse_code=migrations.RunPython.noop),
    ]
